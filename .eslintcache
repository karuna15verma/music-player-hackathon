[{"/home/neeraj/music-app-hackathon/src/index.js":"1","/home/neeraj/music-app-hackathon/src/reportWebVitals.js":"2","/home/neeraj/music-app-hackathon/src/App.js":"3","/home/neeraj/music-app-hackathon/src/Components/Homepage.js":"4"},{"size":500,"mtime":1611377611071,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1611377611071,"results":"7","hashOfConfig":"6"},{"size":161,"mtime":1611380482619,"results":"8","hashOfConfig":"6"},{"size":7576,"mtime":1611389407934,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"ixprx",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/home/neeraj/music-app-hackathon/src/index.js",[],["20","21"],"/home/neeraj/music-app-hackathon/src/reportWebVitals.js",[],"/home/neeraj/music-app-hackathon/src/App.js",["22"],"/home/neeraj/music-app-hackathon/src/Components/Homepage.js",["23"],"import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport { ListItemText, ListItemSecondaryAction, IconButton } from \"@material-ui/core\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport \"./Homepage.css\";\n\nclass Homepage extends React.Component {\n  constructor(props) {\n    super();\n    const myOfflinePlayList = JSON.parse(localStorage.getItem(\"myOfflinePlayList\"));\n    this.state = {\n      songsList: {},\n      currentSong: {},\n      myOfflinePlayList,\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      songsList: [\n        {\n          position: 1,\n          songName: \"first song\",\n          singerName: \"Karuna Verma\",\n          songUrl: \"song.mpeg\",\n        },\n        {\n          position: 2,\n          songName: \"second song\",\n          singerName: \"Karuna Verma\",\n          songUrl: \"song2.mpeg\",\n        },\n        {\n          position: 3,\n          songName: \"third song\",\n          singerName: \"Karuna Verma\",\n          songUrl: \"song3.mpeg\",\n        },\n        {\n          position: 4,\n          songName: \"fourth song\",\n          singerName: \"Karuna Verma\",\n          songUrl: \"song4.mpeg\",\n        },\n        {\n          position: 5,\n          songName: \"fifth song\",\n          singerName: \"Karuna Verma\",\n          songUrl: \"song5.mpeg\",\n        },\n        {\n          position: 1,\n          songName: \"first song\",\n          singerName: \"Karuna Verma\",\n          songUrl: \"song.mpeg\",\n        },\n        {\n          position: 2,\n          songName: \"second song\",\n          singerName: \"Karuna Verma\",\n          songUrl: \"song2.mpeg\",\n        },\n        {\n          position: 3,\n          songName: \"third song\",\n          singerName: \"Karuna Verma\",\n          songUrl: \"song3.mpeg\",\n        },\n        {\n          position: 4,\n          songName: \"fourth song\",\n          singerName: \"Karuna Verma\",\n          songUrl: \"song4.mpeg\",\n        },\n        {\n          position: 5,\n          songName: \"fifth song\",\n          singerName: \"Karuna Verma\",\n          songUrl: \"song5.mpeg\",\n        },\n      ],\n    });\n  }\n\n  setSong = (singleSong, index) => {\n    this.setState({\n      currentSong: {\n        position: singleSong.position,\n        songName: singleSong.songName,\n        singerName: singleSong.singerName,\n        songUrl: singleSong.songUrl,\n      },\n    });\n  };\n\n  setOfflineSong = (singleSong) => {\n    console.log(singleSong);\n    var offlineSong = JSON.parse(localStorage.getItem(\"myOfflinePlayList\"));\n    console.log(offlineSong);\n    if (offlineSong === null) {\n      var offLinePlayList = [];\n      offLinePlayList.push(JSON.stringify(singleSong));\n      console.log(offLinePlayList);\n      localStorage.setItem(\"myOfflinePlayList\", offLinePlayList);\n    } else {\n      var offLinePlayList = offlineSong;\n      offLinePlayList.push(singleSong);\n      localStorage.setItem(\"myOfflinePlayList\", offLinePlayList);\n    }\n  };\n\n  render() {\n    const { currentSong } = this.state;\n    console.log(this.state.myOfflinePlayList);\n    return (\n      <div\n        style={{\n          height: \"100vh\",\n          backgroundRepeat: \"round\",\n          backgroundColor: \"black\",\n          backgroundImage: `url(\"body-background-image.jpg\")`,\n          //   backgroundColor: \"#cccccc\",\n        }}\n      >\n        <div style={{ paddingTop: \"3%\", paddingLeft: \"3%\" }}>\n          <span style={{ color: \"white\", fontSize: \"3rem\" }}>Music Player</span>\n        </div>\n        <div style={{ display: \"flex\" }}>\n          <div style={{ width: \"40vh\", height: \"70vh\", marginLeft: \"3%\", marginTop: \"1%\" }}>\n            <span style={{ color: \"white\" }}>My Play List</span>\n            <List\n              id=\"scroll\"\n              style={{ height: \"65vh\", overflowX: \"auto\", marginTop: \"1%\" }}\n              component=\"nav\"\n              aria-label=\"secondary mailbox folders\"\n            >\n              {this.state.songsList.map((singleSong, index) => (\n                <ListItem\n                  style={{\n                    opacity: index + 1 === currentSong.position ? 0.5 : \"\",\n                    border: index + 1 === currentSong.position ? \"1px solid white\" : \"\",\n                    borderRadius: index + 1 === currentSong.position ? \"10px\" : \"\",\n                  }}\n                  onClick={() => this.setSong(singleSong, index)}\n                  button\n                >\n                  <ListItemIcon>\n                    <img style={{ height: \"40px\" }} src=\"play-audio-icon.png\" alt=\"\" />\n                  </ListItemIcon>\n                  <ListItemText\n                    secondary={<span style={{ color: \"white\" }}>{singleSong.singerName}</span>}\n                    style={{ color: \"white\" }}\n                    primary={<span>{singleSong.songName}</span>}\n                  />\n                  <ListItemSecondaryAction>\n                    <IconButton onClick={() => this.setOfflineSong(singleSong)} edge=\"end\" aria-label=\"delete\">\n                      <FavoriteBorderIcon style={{ color: \"white\" }} />\n                    </IconButton>\n                    <IconButton onClick={() => this.setOfflineSong(singleSong)} edge=\"end\" aria-label=\"delete\">\n                      <BookmarkBorderIcon style={{ color: \"white\" }} />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n              {/* <ListItemLink href=\"#simple-list\">\n              <ListItemText primary=\"Spam\" />\n            </ListItemLink> */}\n            </List>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              textAlign: \"center\",\n              opacity: 0.9,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"25vh\",\n              flexDirection: \"column\",\n              width: \"25vh\",\n              backgroundColor: \"white\",\n              borderRadius: \"30px\",\n              marginLeft: \"10%\",\n            }}\n          >\n            <div>\n              <img style={{ height: \"40px\" }} src=\"play-audio-icon.png\" alt=\"\" />\n            </div>\n            <span style={{ color: \"#f91909\", fontSize: \"1.5rem\" }}>Offline Songs</span>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              textAlign: \"center\",\n              opacity: 0.9,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n              height: \"25vh\",\n              width: \"25vh\",\n              backgroundColor: \"white\",\n              borderRadius: \"30px\",\n              marginLeft: \"10%\",\n            }}\n          >\n            <div>\n              <img style={{ height: \"40px\" }} src=\"play-audio-icon.png\" alt=\"\" />\n            </div>\n            <span style={{ color: \"#f91909\", fontSize: \"1.5rem\" }}>Liked Songs</span>\n          </div>\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n          <div style={{ position: \"fixed\", bottom: \"10px\", width: \"90%\" }}>\n            <AudioPlayer\n              autoPlay\n              src={this.state.currentSong.songUrl}\n              onPlay={(e) => console.log(\"onPlay\")}\n              // other props here\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Homepage;\n",{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":1,"column":8,"nodeType":"30","messageId":"31","endLine":1,"endColumn":12},{"ruleId":"32","severity":1,"message":"33","line":111,"column":11,"nodeType":"30","messageId":"34","endLine":111,"endColumn":26},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-redeclare","'offLinePlayList' is already defined.","redeclared","no-global-assign","no-unsafe-negation"]